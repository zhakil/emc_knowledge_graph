# EMC知识图谱系统开发环境 - 完全兼容Python 3.11
# 所有版本都经过验证，确保可用性和兼容性
# 最后更新：2024年基于实际PyPI可用版本

# === 继承生产环境依赖 ===
-r requirements.txt

# === 现代代码质量工具 ===
ruff==0.8.4                     # 超快Python linter+formatter，替代多个传统工具
pre-commit==4.0.1               # Git钩子自动化，确保代码质量
bandit[toml]==1.8.0             # 安全漏洞扫描，支持现代配置格式

# === 静态类型检查生态系统 ===
# 这一部分是我们重点修复的区域，确保所有类型相关包都使用正确版本
mypy==1.13.0                    # 静态类型检查器主程序
types-redis==4.6.0.20241004     # Redis类型存根 - 经过验证的最新版本
types-requests==2.32.0.20250602 # Requests类型存根 - 经过验证的最新版本

# === 核心测试框架 ===
# 测试是确保代码质量的基础，这些工具提供了完整的测试能力
pytest==8.3.4                   # 现代Python测试框架
pytest-asyncio==0.24.0          # 异步代码测试支持，对我们的async功能重要
pytest-cov==6.0.0               # 代码覆盖率分析，帮助识别未测试代码
pytest-mock==3.14.0             # 高级模拟对象，用于隔离测试
pytest-xdist[psutil]==3.6.0     # 并行测试执行，显著提高测试速度
pytest-html==4.1.1              # 生成美观的HTML测试报告
pytest-sugar==1.0.0             # 美化测试输出，提供更好的开发体验

# === 开发效率工具 ===
# 这些工具提升日常开发工作的效率和体验
ipython==8.30.0                 # 增强的交互式Python环境
rich==13.9.4                    # 终端输出美化，让调试信息更易读
icecream==2.1.3                 # 优雅的调试打印工具，比print更强大

# === 性能分析和优化 ===
# 对于大规模知识图谱处理，性能分析是必需的
memory-profiler==0.61.0         # 内存使用分析，识别内存瓶颈
line-profiler==4.1.3            # 行级性能分析，精确定位慢代码

# === 文档生成工具 ===
# 良好的文档是项目成功的关键
mkdocs==1.6.1                   # 现代文档网站生成器
mkdocs-material==9.5.47         # Material Design主题，提供专业外观

# === 数据可视化 ===
# 知识图谱项目需要强大的可视化能力
pyvis==0.3.2                    # 交互式图可视化，专为网络图设计
plotly==5.24.1                  # 通用数据可视化，支持多种图表类型

# === 依赖管理和安全 ===
# 管理复杂项目的依赖关系和安全性
pip-tools==7.4.1                # 依赖版本锁定，确保环境一致性
safety==3.2.11                  # 安全漏洞扫描，识别已知安全问题
pipdeptree==2.23.4              # 依赖关系可视化，理解包依赖结构

# === 命令行界面开发 ===
# 为系统提供专业的CLI界面
typer[rich]==0.15.1             # 现代CLI框架，支持类型提示
click==8.1.7                    # CLI构建基础库
tqdm==4.67.1                    # 进度条显示，改善用户体验

# === 测试数据生成 ===
# 生成高质量的测试数据对于全面测试很重要
faker==33.1.0                   # 生成各种类型的假数据
factory-boy==3.3.1              # 测试对象工厂模式实现

# === 代码质量分析 ===
# 深入分析代码质量，识别潜在问题
radon==6.0.1                    # 代码复杂度分析，识别过度复杂的代码
autopep8==2.3.1                 # 自动PEP8格式化
isort==5.13.2                   # import语句自动排序和分组

# === 数据库开发支持 ===
# 为SQLAlchemy提供类型支持
sqlalchemy-stubs==0.4           # SQLAlchemy类型提示，改善ORM开发体验

# === API开发增强 ===
# 提升FastAPI开发效率的工具
fastapi-cli==0.0.5              # FastAPI官方命令行工具
httpx==0.28.0                   # 现代HTTP客户端，用于API测试

# === 配置管理 ===
# 灵活的配置管理解决方案
python-decouple==3.8            # 环境变量管理，分离配置和代码
environs==11.0.0                # 高级配置解析，支持多种数据类型

# === 调试增强 ===
# 提供更强大的调试能力
pdbpp==0.10.3                   # 增强的Python调试器

# === 知识图谱专用工具 ===
# 这些是专门为语义网和知识图谱开发的工具
rdflib==7.1.1                   # RDF数据处理，支持语义网标准
owlready2==0.48                 # 本体操作库，处理OWL格式

# === 代码质量跟踪 ===
# 长期跟踪代码质量的变化趋势
wily==1.25.0                    # 代码质量历史跟踪

# ===================================
# 重要说明和使用指导
# ===================================

# 1. 版本兼容性说明：
#    - 所有包版本都经过Python 3.11兼容性验证
#    - 类型存根包使用最新可用的日期版本
#    - 避免了已知的版本冲突问题

# 2. spaCy模型安装：
#    spaCy语言模型需要单独下载，运行以下命令：
#    python -m spacy download en_core_web_sm

# 3. 安装建议：
#    - 推荐在清洁的虚拟环境中安装
#    - 如遇到安装问题，先尝试升级pip：pip install --upgrade pip
#    - 某些包可能需要系统级依赖，请参考各包的官方文档

# 4. 可选组件：
#    以下组件被有意排除以避免复杂依赖冲突：
#    - jupyter相关包（如需要可单独安装）
#    - 某些较重的机器学习库（如需要可按需添加）

# 5. 维护建议：
#    - 定期检查包更新，特别是安全相关更新
#    - 使用pip-tools生成lock文件以确保部署一致性
#    - 在生产环境中固定所有依赖版本