version: '3.8'

services:
  # EMC知识图谱前端
  emc-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: emc-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8000
      - REACT_APP_WEBSOCKET_URL=ws://localhost:8000
    restart: unless-stopped
    networks:
      - emc-network

  # EMC知识图谱后端API
  emc-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: emc-backend
    ports:
      - "8000:8000"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=emc_password_123
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
      - ENV=production
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - neo4j
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - emc-network

  # Neo4j图数据库
  neo4j:
    image: neo4j:5.15.0-community
    container_name: emc-neo4j
    ports:
      - "7474:7474"   # Web界面
      - "7687:7687"   # Bolt协议
    environment:
      - NEO4J_AUTH=neo4j/emc_password_123
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_dbms_memory_heap_initial_size=512m
      - NEO4J_dbms_memory_heap_max_size=1G
      - NEO4J_dbms_memory_pagecache_size=512m
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
    restart: unless-stopped
    networks:
      - emc-network

  # Redis缓存
  redis:
    image: redis:7.4-alpine
    container_name: emc-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - emc-network

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: emc-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - emc-frontend
      - emc-backend
    restart: unless-stopped
    networks:
      - emc-network

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  redis_data:
    driver: local

networks:
  emc-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16